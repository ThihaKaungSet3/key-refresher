// Code generated by ent, DO NOT EDIT.

package apikey

import (
	"fmt"
)

const (
	// Label holds the string label denoting the apikey type in the database.
	Label = "api_key"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRemainingCredit holds the string denoting the remaining_credit field in the database.
	FieldRemainingCredit = "remaining_credit"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// Table holds the table name of the apikey in the database.
	Table = "api_keys"
)

// Columns holds all SQL columns for apikey fields.
var Columns = []string{
	FieldID,
	FieldRemainingCredit,
	FieldStatus,
	FieldKey,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Status defines the type for the "status" enum field.
type Status string

// StatusAvailable is the default value of the Status enum.
const DefaultStatus = StatusAvailable

// Status values.
const (
	StatusInUse     Status = "in-use"
	StatusExpired   Status = "expired"
	StatusAvailable Status = "available"
)

func (s Status) String() string {
	return string(s)
}

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s Status) error {
	switch s {
	case StatusInUse, StatusExpired, StatusAvailable:
		return nil
	default:
		return fmt.Errorf("apikey: invalid enum value for status field: %q", s)
	}
}
